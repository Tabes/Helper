################################################################################
### Universal Helper Library - Project Configuration
### Central Configuration File for helper Functions and Project Settings
### Provides global Variables, Paths, and default Values
################################################################################
### Project: Universal Helper Library
### Version: 3.0.1
### Author:  Mawage (Development Team)
### Date:    2025-09-19
### License: MIT
### Usage:   Source this File to load Helper Configuration
### Commit:  Central Project Configuration for Helper Library
################################################################################


################################################################################
### Framework Default Configuration ###
################################################################################

### Framework Metadata ###
# FRAMEWORK_VERSION="3.0.0" (nicht verwendet, kommt aus dem Header)
# FRAMEWORK_NAME="Universal Helper Library" (nicht verwendet, kommt aus dem Header)


################################################################################
### === Interactive Variables === ###
################################################################################

### Interactive Dialog Variables ####
YES=true    ### Can be used to enable additional Package Installation by default ###


################################################################################
### === PATH VARIABLES === ###
################################################################################

### Default Paths (will be overridden by Project) ###
FRAMEWORK_ROOT="/opt/helper"

initialize_paths() {
    local project_root="${1:-${FRAMEWORK_ROOT}}"
    
    declare -gA path=(
        [framework]="${FRAMEWORK_ROOT}"                         ### Framework (root Path) ###
        [project]="${project_root}"                             ### Project (root Path) ###
        [backups]="${project_root}/backups"                     ### Project (Backup Path) ###
        [configs]="${project_root}/configs"                     ### Project (Config Path) ###
        [docs]="${project_root}/docs"                           ### Project (Documents Path) ###
        [help]="${project_root}/docs/help"                      ### Project (Help File Path) ###
        [logs]="${project_root}/logs"                           ### Project (Logging Path) ###
        [script]="${project_root}/scripts"                      ### Project (Script Path) ###
        [plugins]="${project_root}/scripts/plugins"             ### Project (Plugin Path) ###
        [templates]="${project_root}/scripts/templates"         ### Project (Template Path) ###
        [utilities]="${project_root}/utilities"                 ### Project (Utilities Path) ###
        [sudoers]="/etc/sudoers.d"                              ### Default Sudoers File Path ###
    )

}

initialize_files() {

    declare -gA file=(
        [central_log]="${path[logs]}/system.log}"                ### System Logging File ###
        [start]="${path[project]}/start.sh}"                     ### Project initialization File ###
        [gitclone]="${path[framework]}/utilities/gitclone.sh}"   ### GitHub Workflow Manager ###
        [dos2linux]="${path[framework]}/utilities/dos2linux.sh}" ### DOS2Linux Converter ###
        [downloads]="${path[framework]}/utilities/downloads.sh}" ### Simple Download Manager ###
    )

}

################################################################################
### === CONFIGURATION SETTINGS === ###
################################################################################

### Plugin Loading ###
CONFIG_PATTERN=("*.conf" "*.sh")
CONFIG_EXCLUSION=("start.sh" "main.sh")


################################################################################
### === USER & PERMISSIONS === ###
################################################################################

DEFAULT_GROUP_SUFFIX="-admin" ### Default Group Suffix for Secure Function ###


################################################################################
### === SECURITY CONFIGURATION === ###
################################################################################

### Default Sudo Commands for Secure Function ###
DEFAULT_SUDO_COMMANDS="/usr/bin/rsync,/usr/bin/cp,/usr/bin/mv,/usr/bin/mkdir,/usr/bin/rm"


################################################################################
### === GIT REPOSITORY MANAGEMENT === ###
################################################################################

### Workflow scripts ###
GITCLONE_SCRIPT="$UTILITIES_DIR/gitclone.sh"

### Git repository settings ###
REPO_URL="https://github.com/Tabes/Helper.git"
REPO_RAW_URL="https://raw.githubusercontent.com/Tabes/Helper/refs/heads/main"
REPO_BRANCH="main"
REPO_DEVELOP_BRANCH="develop"
REPO_REMOTE_NAME="origin"

### Branch naming conventions ###
FEATURE_BRANCH_PREFIX="feature/"
HOTFIX_BRANCH_PREFIX="hotfix/"
RELEASE_BRANCH_PREFIX="release/"

### Git user settings ###
GIT_USER_NAME="$PROJECT_AUTHOR"
GIT_USER_EMAIL="$PROJECT_EMAIL"


################################################################################
### === VERSION MANAGEMENT === ###
################################################################################

### Versioning settings ###
VERSION_PREFIX="v"
VERSION_FORMAT="MAJOR.MINOR.PATCH"
VERSION_SCHEME="semantic"

### Auto update behavior ###
AUTO_UPDATE_ENABLED="true"
AUTO_UPDATE_GITCLONE="true"
CHECK_UPDATE_INTERVAL="300"

### Commit message settings ###
DEFAULT_COMMIT_PREFIX="[AUTO]"
FEATURE_COMMIT_PREFIX="[FEATURE]"
BUGFIX_COMMIT_PREFIX="[BUGFIX]"
RELEASE_COMMIT_PREFIX="[RELEASE]"


################################################################################
### === LOGGING AND MONITORING === ###
################################################################################

### Log settings ###
LOG_LEVEL="INFO"
LOG_FORMAT="timestamp"                  ### default timestamp, iso8601, unix ###
LOG_ROTATION="true"
LOG_STORAGE_DAYS="30"
LOG_MAX_SIZE="10M"
LOG_MAX_FILES="10"


################################################################################
### === LOG FORMATTING CONFIGURATION === ###
################################################################################

### Enable Tab Formatting ###
LOG_USE_TABS=true                     ### Enable/disable Tab Formatting ###

### Tab Positions Array (Column Positions) ###
### Timestamp, Script Name, Log Level, Parameters, Comments, Additional ###
LOG_TAB_POS=(1 25 40 50 62 75)

### Alternative: Use real Tabs instead of Spaces ###
LOG_USE_REAL_TABS=false                   ### Use \t instead of spaces ###


################################################################################
### === VALIDATION AND CHECKS === ###
################################################################################

### System Requirements ###
REQUIRED_COMMANDS=(
    "git"
    "curl"
    "wget"
    "make"
    "gcc"
    "python3"
)

REQUIRED_PACKAGES=(
    "acl" "acl"
    "sudo" "sudo"
    "ssh" "openssh-server, openssh-client"
)

### Minimum disk space (in MB) ###
MIN_DISK_SPACE="5000"
MIN_MEMORY="2000"


################################################################################
### === RUNTIME CONFIGURATION === ###
################################################################################

### Execution settings ###
SCRIPT_TIMEOUT="3600"
MAX_PARALLEL_JOBS="4"
ENABLE_DEBUG_MODE="false"
VERBOSE_OUTPUT="false"

### Security settings ###
REQUIRE_ROOT="true"
ALLOW_UNSAFE_OPERATIONS="false"
VALIDATE_CHECKSUMS="true"


################################################################################
### === GENERAL HELPER VARIABLES === ###
################################################################################

### Absolute Positions (Array) for formatted Output ###
# POS=(4 7 21 35 47 62 77 88 99)
declare -A POS=(
    [P0]=2          # Position #0
    [P1]=4          # Position #1
    [P2]=7          # Position #2
    [P3]=21         # Position #3
    [P4]=35         # Position #4
    [P5]=47         # Position #5
    [P6]=62         # Position #6
    [P7]=77         # Position #7
    [P8]=88         # Position #8
    [P9]=99         # Position #9
    [File]=15       # File
    [Version]=9     # Version
    [Status]=14     # Status
    [Path]=40       # Path
    [Size]=10       # Size
    [Modified]=20   # Modified
)

### Ruler and scaling for debugging ###
declare -A RULER=(
    [ruler]='       10|       20|       30|       40|       50|       60|       70|       80|       90|      100|      110|      120|'
    [scaling]='123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890'
    [ruler2]='    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :    :'
)

### Color definitions - can be overridden in project.conf ###
readonly NC="${COLOR_NC:-\033[0m}"
readonly RD="${COLOR_RD:-\033[0;31m}"
readonly GN="${COLOR_GN:-\033[0;32m}"
readonly YE="${COLOR_YE:-\033[1;33m}"
readonly BU="${COLOR_BU:-\033[0;34m}"
readonly CY="${COLOR_CY:-\033[0;36m}"
readonly WH="${COLOR_WH:-\033[1;37m}"
readonly MG="${COLOR_MG:-\033[0;35m}"
readonly GR="${COLOR_GR:-\033[0;30m}"
readonly BK="${COLOR_BK:-\033[1;30m}"

### Unicode symbols - can be overridden in project.conf ###
readonly SYMBOL_SUCCESS="${SYMBOL_SUCCESS:-‚úì}"
readonly SYMBOL_ERROR="${SYMBOL_ERROR:-‚úó}"
readonly SYMBOL_WARNING="${SYMBOL_WARNING:-‚ö†}"
readonly SYMBOL_INFO="${SYMBOL_INFO:-‚Ñπ}"

### === Status Symbole === ###
declare -A symbol=(
    [ok]="‚úÖ"
    [skipped]="‚è©"
    [failed]="‚ùå"
    [unknown]="‚ùì"
    [downloaded]="üü¢"
    [dry]="üíß"
    [backup]="üì¶"
    [sourced]="üìú"
    [sucssess]="‚úì"
    [error]="‚úó"
    [warning]="‚ö†"
    [info]="‚Ñπ"
)


################################################################################
### === INITIALIZATION === ###
################################################################################

### Load Project Configuration ###
if [ "${BASH_SOURCE[0]}" = "${0}" ]; then

    echo "Project: $PROJECT_NAME v$PROJECT_VERSION"
    echo "Author:  $PROJECT_AUTHOR <$PROJECT_EMAIL>"
    echo "Root:    $PROJECT_ROOT"
    echo "Repository: $REPO_URL"
    echo ""
    echo "Key Paths:"
    echo "  Builder:  $BUILDER_DIR"
    echo "  Configs:  $CONFIGS_DIR" 
    echo "  Workflow: $WORKFLOW_DIR"
    echo "  Scripts:  $SCRIPTS_DIR"

else

    ### Configuration loaded successfully ###
    export CONFIG_LOADED="true"

fi
